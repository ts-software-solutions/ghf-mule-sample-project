name: Deploy workflow

on:
  workflow_call:
    secrets:
      CRYPTO_KEY: 
        required: true
      MULE_CLIENT_ID: 
        required: true
      MULE_CLIENT_SECRET: 
        required: true
      ANYPOINT_CLIENT_ID: 
        required: true
      ANYPOINT_CLIENT_SECRET: 
        required: true
      GH_PAT: 
        required: true
    inputs:
      mule-env: 
        description: The MuleSoft environment that the deployment will be deployed to
        required: true
        type: string
      tag-name:
        description: The tag name used in the build stage so the release can be fetched
        required: true
        type: string
    outputs:
      deployed-version: 
        description: The Version number from the pom after the deployment completed
        value: ${{ jobs.deploy.outputs.pom-version }}


        
jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      pom-version: ${{ steps.pom-version.outputs.VERSION }} 
    steps:

    - name: Get Files from early-access release and extract zip file
      uses: robinraju/release-downloader@v1.8
      with: 
        tag: "${{ inputs.tag-name }}"
        fileName: "*.jar"
        tarBall: false
        zipBall: true
        out-file-path: "release_assets"
        extract: true
        token: ${{ secrets.GH_PAT }}

    - name: Get paths to source code and jar
      id: get_paths
      run: |
        echo "SOURCE_CODE=$(ls -1 -d release_assets/*mule-sample-project*/)" >> $GITHUB_OUTPUT
        echo "JAR_FILE=$(ls release_assets/*.jar)" >> $GITHUB_OUTPUT

    - name: Copy POM into working directory
      run: |
        cp ${{ steps.get_paths.outputs.SOURCE_CODE }}/pom.xml .
        cp ${{ steps.get_paths.outputs.SOURCE_CODE }}/muleDeploy.groovy .

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven


    - name: Deploy To specified environment based on profile
      run: |
        mvn mule-deploy:deploy \
        -e \
        -P ${{ inputs.mule-env }} \
        -Dmule.key=${{ secrets.CRYPTO_KEY }} \
        -DmuleDeploy.env=${{ inputs.mule-env }} \
        -DmuleDeploy.appArtifact=${{ steps.get_paths.outputs.JAR_FILE }} \
        -Danypoint.connected-app.id=${{ secrets.MULE_CLIENT_ID }} \
        -Danypoint.connected-app.secret=${{ secrets.MULE_CLIENT_SECRET }} \
        -DmuleDeploy.cryptoKey=${{ secrets.CRYPTO_KEY }} \
        -DmuleDeploy.autoDiscClientId=${{ secrets.ANYPOINT_CLIENT_ID }} \
        -DmuleDeploy.autoDiscClientSecret=${{ secrets.ANYPOINT_CLIENT_SECRET }} \
        -Danypoint.org.name="AVIO Sandbox" \
        -Dgroovy.file=muleDeploy.groovy


    - name: Get POM version for Output
      id: pom-version
      run: |
        echo VERSION=$(mvn -q \
        -Dexec.executable="echo" \
        -Dexec.args='${project.version}' \
        --non-recursive \
        org.codehaus.mojo:exec-maven-plugin:1.6.0:exec) >> $GITHUB_OUTPUT
