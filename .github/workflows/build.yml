name: Test and build Jar File 

on:
  workflow_call:
    secrets:
      MULE_DEV_CRYPTO_KEY: 
        required: true
      MULE_EE_REPO_USERNAME: 
        required: true
      MULE_EE_REPO_PASSWORD: 
        required: true
      MULE_CLIENT_ID: 
        required: true
      MULE_CLIENT_SECRET: 
        required: true
    outputs:
      app-version:
        description: The application version
        value: ${{ jobs.build-and-publish.outputs.version }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    outputs:
      version: "1.0.0-${{ steps.vars.outputs.SHA_SHORT }}"
    steps:
    # Checkout current branch
    - uses: actions/checkout@v3
    
    # Setup java and maven settings
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Configure Maven settings
      uses: whelk-io/maven-settings-xml-action@v18
      with:
        servers: >
          [
            {
              "id": "anypoint-exchange-v3",
              "username": "~~~Client~~~",
              "password": "${{ secrets.MULE_CLIENT_ID }}~?~${{ secrets.MULE_CLIENT_SECRET }}"
            },
            {
              "id": "avio-mulesoft-ee-releases",
              "username": "${{ secrets.MULE_EE_REPO_USERNAME }}",
              "password": "${{ secrets.MULE_EE_REPO_PASSWORD }}"
            }
          ]
        mirrors: >
          [
            {
              "id": "avio-mulesoft-ee-releases",
              "name": "avio-mulesoft-ee-releases",
              "mirrorOf": "MuleRepository",
              "url": "https://devops.avioconsulting.com/nexus/repository/mulesoft-ee-releases/"
            }
          ]
        repositories: >
          [
            { 
              "id": "MuleRepository", 
              "name": "MuleRepository", 
              "url": "https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee/", 
              "releases": { 
                "enabled": "true" 
              }, 
              "snapshots": { 
                "enabled": "true" 
              } 
            }
          ]
        active_profiles: >
          [
            "github"
          ]
        output_file: .m2/settings.xml
    # Get current github sha value short version for use in version number
    - name: Get short commit sha for revision
      id: vars
      run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    # Build Jar File 
    - name: Build Jar
      run: mvn clean package -e -U -s ./.m2/settings.xml -Dmule.env=dev -Dmule.key=${{ secrets.MULE_DEV_CRYPTO_KEY }} -Drevision=${{ steps.vars.outputs.SHA_SHORT }}
    
    - name: Upload Jar and Pom.xml
      uses: actions/upload-artifact@v3
      with:
        name: app-artifacts
        path: |
          target/*.jar
          pom.xml