name: Maven Build Workflow

on:
  workflow_call:
    inputs:
      include-mule-ee-repo:
        description: Adds the Mule EE repo to settings.xml
        required: false
        type: boolean
        default: false
      java-distribution:
        description: The Java Distribution to use, default 'temurin'
        required: false
        type: string
        default: temurin
      java-version:
        description: The Java Version to use, default '8'
        required: false
        type: string
        default: 8
      include-test-results:
        description: A flag to run publish-unit-test-result
        required: false
        type: boolean
        default: true
      maven-args:
        description: Maven arguments appended to maven calls
        required: false
        type: string
      stage-maven-artifacts:
        description: Set to true if you need to stage Maven artifacts for JReleaser publishing during release
        required: false
        type: boolean
        default: false
    outputs:
      app-version:
        description: The application version
        value: ${{ jobs.Build-With-Maven.outputs.version }}
jobs:
  Build-With-Maven:
    runs-on: ubuntu-latest
    env:
      MULE_EE_USERNAME: ${{ secrets.MULE_EE_USERNAME }}
      MULE_EE_PASSWORD: ${{ secrets.MULE_EE_PASSWORD }}
    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Set up JDK for build and unit test with Mule EE
        uses: actions/setup-java@v3
        if: ${{ inputs.include-mule-ee-repo }}
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: maven
          server-id: mulesoft-ee-releases
          server-username: MULE_EE_USERNAME
          server-password: MULE_EE_PASSWORD

      - name: Set up JDK for build and unit test
        uses: actions/setup-java@v3
        if: ${{ !inputs.include-mule-ee-repo }}
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: maven

      - name: Set Version
        id: set-version
        run: echo version=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: ./mvnw compile ${{ inputs.maven-args }}

      - name: Verify
        run: ./mvnw --batch-mode verify ${{ inputs.maven-args }}

      - name: Stage Maven Artifacts
        if: ${{ inputs.stage-maven-artifacts }}
        run: ./mvnw -P release deploy -DskipTests=true ${{ inputs.maven-args }}

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ inputs.include-test-results }}
        with:
          files: |
            target/surefire-reports/*.xml

      - name: Upload Build Artifacts (JARs and Maven Staging Repo)
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            target/*.jar
            target/staging-deploy
